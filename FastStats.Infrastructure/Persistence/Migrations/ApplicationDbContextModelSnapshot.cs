// <auto-generated />
using System;
using FastStats.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FastStats.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FastStats.Domain.Dataset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("_data")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("Data");

                    b.HasKey("Id");

                    b.ToTable("Datasets");
                });

            modelBuilder.Entity("FastStats.Domain.StatisticalComputation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ComputationStrategyIdentifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("ComputedEndedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ComputedStartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DatasetId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DatasetId");

                    b.ToTable("StatisticalComputations");
                });

            modelBuilder.Entity("FastStats.Domain.StatisticalComputation", b =>
                {
                    b.HasOne("FastStats.Domain.Dataset", "Dataset")
                        .WithMany()
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FastStats.Domain.ValueObjects.StatisticalSummary", "Results", b1 =>
                        {
                            b1.Property<Guid>("StatisticalComputationId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Average")
                                .HasColumnType("numeric")
                                .HasColumnName("Average");

                            b1.Property<decimal>("Median")
                                .HasColumnType("numeric")
                                .HasColumnName("Median");

                            b1.Property<decimal>("Variance")
                                .HasColumnType("numeric")
                                .HasColumnName("Variance");

                            b1.HasKey("StatisticalComputationId");

                            b1.ToTable("StatisticalComputations");

                            b1.WithOwner()
                                .HasForeignKey("StatisticalComputationId");
                        });

                    b.Navigation("Dataset");

                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
